using eFindingsRegister.Model.Entities;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace eFindingsRegister.Logic.Abstract
{
    public interface IRolePermissionRepository
    {
        bool Create(RolePermission rolePermission);
        Task<RolePermission> CreateAsync(RolePermission rolePermission, CancellationToken cancellationToken);

        Task<bool> DeleteAsync(RolePermission rolePermission, CancellationToken cancellationToken);

        bool Delete(RolePermission rolePermission);

        bool DeleteByRoleId(string roleId);
        Task<bool> DeleteByRoleIdAsync(string roleId);

        Task<RolePermission> FindByRoleIdAndByPermissionIdAsync(string roleId, string permissionId); 

        RolePermission FindByRoleIdAndByPermissionId(string roleId, string permissionId);

        Task<IEnumerable<RolePermission>> GetAllRolePermissionsByRoleIdAsync(string roleId);

        IEnumerable<RolePermission> GetAllRolePermissionsByRoleId(string roleId);

        IEnumerable<Permission> GetAllPermissions();

        Task<IEnumerable<Permission>> GetAllPermissionsAsync();

        Permission GetPermissionById(string permissionId);

        Task<Permission> GetPermissionByIdAsync(string permissionId);
        void Dispose();
    }
}
